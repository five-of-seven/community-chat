{"ast":null,"code":"import _toConsumableArray from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/src/components/Chat.js\";\nimport React from \"react\";\nimport io from \"socket.io-client\";\nimport { Paper, Button, TextField, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails } from '@material-ui/core';\nimport axios from 'axios'; // import ExpandMoreIcon from '@material-ui/icons/ExpandMoreIcon';\n\nimport './Chat.css';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.state = {\n      id: '',\n      clients: ['123'],\n      username: 'Lukas',\n      message: '',\n      messages: []\n    };\n    _this.socket = io('localhost:8080');\n\n    _this.socket.on('RECEIVE_MESSAGE', function (data) {\n      this.socket.to(\"\".concat(this.state.id)).emit(data);\n      addMessage(data);\n    });\n\n    var addMessage = function addMessage(data) {\n      console.log(data);\n\n      _this.setState({\n        messages: _toConsumableArray(_this.state.messages).concat([data])\n      });\n\n      console.log(_this.state.messages);\n    };\n\n    _this.sendMessage = function (ev) {\n      ev.preventDefault();\n\n      _this.socket.emit('SEND_MESSAGE', {\n        author: _this.state.id,\n        message: _this.state.message\n      });\n\n      _this.setState({\n        message: ''\n      });\n    };\n\n    _this.privateMsg = _this.privateMsg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.fetchData();\n      this.socket.on('connect', function () {\n        _this2.setState({\n          id: _this2.socket.id\n        });\n      });\n      console.log(this.state.clients);\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var that = this;\n      axios.get('/clients').then(function (response) {\n        console.log(response.data);\n        response.data.map(function (data) {\n          return that.state.clients.push(data);\n        }); // that.state.clients.push(response.data)\n        // that.setState({clients: [...that.state.clients, response.data]})\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"privateMsg\",\n    value: function privateMsg(e) {\n      // this.state.clients.map((client)=>{\n      //     if(client) {\n      //     }\n      // })\n      console.log(e.target.getAttribute('tabindex'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.clients.map(function (client, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"chat-container\",\n          onClick: function onClick(e) {\n            return _this3.privateMsg(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(ExpansionPanel, {\n          key: i,\n          onClick: function onClick(e) {\n            return _this3.privateMsg(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(ExpansionPanelSummary, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, client)), React.createElement(ExpansionPanelDetails, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"messages\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, _this3.state.messages.map(function (message) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, message.author, \": \", message.message);\n        })), React.createElement(\"div\", {\n          className: \"card-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"outlined-bare\",\n          margin: \"normal\",\n          variant: \"outlined\",\n          placeholder: \"Username\",\n          value: _this3.state.username,\n          onChange: function onChange(ev) {\n            return _this3.setState({\n              username: ev.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          id: \"outlined-bare\",\n          margin: \"normal\",\n          variant: \"outlined\",\n          placeholder: \"Message\",\n          value: _this3.state.message,\n          onChange: function onChange(ev) {\n            return _this3.setState({\n              message: ev.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: _this3.sendMessage,\n          variant: \"outlined\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Send\"))))));\n      })));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/Juico/Desktop/RPT07/Thesis/community-chat/src/components/Chat.js"],"names":["React","io","Paper","Button","TextField","ExpansionPanel","ExpansionPanelSummary","Typography","ExpansionPanelDetails","axios","Chat","props","state","id","clients","username","message","messages","socket","on","data","to","emit","addMessage","console","log","setState","sendMessage","ev","preventDefault","author","privateMsg","bind","fetchData","that","get","then","response","map","push","catch","error","e","target","getAttribute","client","i","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport io from \"socket.io-client\"\nimport {Paper, Button, TextField, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails} from '@material-ui/core'\nimport axios from 'axios'\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMoreIcon';\n\nimport './Chat.css'\n\nclass Chat extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            id:'',\n            clients: ['123'],\n            username: 'Lukas',\n            message: '',\n            messages: []\n        };\n\n        this.socket = io('localhost:8080');\n\n        this.socket.on('RECEIVE_MESSAGE', function(data){\n            this.socket.to(`${this.state.id}`).emit(data);\n            addMessage(data);\n        });\n\n        const addMessage = data => {\n            console.log(data);\n            this.setState({messages: [...this.state.messages, data]});\n            console.log(this.state.messages);\n        };\n\n        this.sendMessage = ev => {\n            ev.preventDefault();\n            this.socket.emit('SEND_MESSAGE', {\n                author: this.state.id,\n                message: this.state.message\n            })\n            this.setState({message: ''});\n        }\n\n        this.privateMsg = this.privateMsg.bind(this)\n    }\n\n    componentWillMount() {\n        this.fetchData()\n        this.socket.on('connect', ()=> {\n            this.setState({\n                id: this.socket.id\n            })\n        })\n        console.log(this.state.clients)\n    }\n\n    fetchData() {\n        var that = this;\n        axios.get('/clients')\n            .then(function (response) {\n                console.log(response.data)\n                response.data.map(data => \n                    that.state.clients.push(data)\n                )\n                // that.state.clients.push(response.data)\n                // that.setState({clients: [...that.state.clients, response.data]})\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    privateMsg(e) {\n        // this.state.clients.map((client)=>{\n        //     if(client) {\n\n        //     }\n        // })\n        console.log(e.target.getAttribute('tabindex'))\n    }\n\n    render() {\n        return (\n            \n            <div>\n            <Paper>\n                {this.state.clients.map((client,i) => (\n                    <div key={i} className='chat-container' onClick={(e)=> this.privateMsg(e)}>\n                    <ExpansionPanel key={i} onClick={(e)=> this.privateMsg(e)}>\n                        <ExpansionPanelSummary>\n                        <Typography>{client}</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Typography>\n                                <div className=\"messages\">\n                                    {this.state.messages.map(message => {\n                                        return (\n                                            <div>{message.author}: {message.message}</div>\n                                        )\n                                    })}\n                                </div>\n                                <div className=\"card-footer\">\n                                    <TextField \n                                        id=\"outlined-bare\" \n                                        margin=\"normal\" \n                                        variant=\"outlined\" \n                                        placeholder=\"Username\" \n                                        value={this.state.username} \n                                        onChange={ev => this.setState({username: ev.target.value})} />\n                                    <TextField \n                                        id=\"outlined-bare\" \n                                        margin=\"normal\" \n                                        variant=\"outlined\" \n                                        placeholder=\"Message\" \n                                        value={this.state.message} \n                                        onChange={ev => this.setState({message: ev.target.value})}/>\n                                    <br/>\n                                <Button onClick={this.sendMessage} variant=\"outlined\" color=\"primary\">Send</Button>\n                                </div>\n                        </Typography>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                  </div>\n                ))}\n            </Paper>\n            </div>\n        );\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}