{"ast":null,"code":"import _toConsumableArray from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Juico/Desktop/RPT07/Thesis/community-chat/src/components/Chat.js\";\nimport React from \"react\";\nimport io from \"socket.io-client\";\nimport { Paper, Button, TextField, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails } from '@material-ui/core';\nimport axios from 'axios'; // import ExpandMoreIcon from '@material-ui/icons/ExpandMoreIcon';\n\nimport './Chat.css';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.state = {\n      clients: [],\n      id: '',\n      username: 'Lukas',\n      message: '',\n      messages: []\n    };\n    _this.socket = io('localhost:8080');\n\n    _this.socket.on('disconnected', function (data) {\n      removeClient(data);\n    });\n\n    _this.socket.on('RECEIVE_MESSAGE', function (data) {\n      addMessage(data);\n    });\n\n    _this.socket.on('client', function (data) {\n      addId(data);\n    });\n\n    _this.socket.on('allClients', function (data) {\n      addAllClients(data);\n    });\n\n    var addMessage = function addMessage(data) {\n      console.log(data);\n\n      _this.setState({\n        messages: _toConsumableArray(_this.state.messages).concat([data])\n      });\n\n      console.log(_this.state.messages);\n    };\n\n    var addId = function addId(data) {\n      _this.setState({\n        id: data\n      });\n    };\n\n    var removeClient = function removeClient(data) {\n      // this.state.clients.map((client,i) => {\n      //     if(client === data) {\n      //         this.state.clients.splice(i, client)\n      //     };\n      // })\n      for (var i = 0; i < _this.state.clients.length; i++) {\n        if (_this.state.clients[i] === data) {\n          _this.state.clients.splice(i, _this.state.clients[i]);\n        }\n      }\n\n      console.log(_this.state.clients);\n\n      _this.setState({\n        state: _this.state\n      });\n\n      _this.forceUpdate();\n    };\n\n    var addAllClients = function addAllClients(data) {\n      _this.setState({\n        clients: data\n      }, function () {\n        console.log('Clients from state ', this.state.clients);\n      });\n    };\n\n    _this.sendMessage = function (ev) {\n      ev.preventDefault();\n\n      _this.socket.emit('SEND_MESSAGE', {\n        author: _this.state.id,\n        message: _this.state.message\n      });\n\n      _this.setState({\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.clients.map(function (client, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"chat-container\",\n          onClick: function onClick(e) {\n            console.log(e.target);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(ExpansionPanel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(ExpansionPanelSummary, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, client)), React.createElement(ExpansionPanelDetails, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"messages\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, _this2.state.messages.map(function (message) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, message.author, \": \", message.message);\n        })), React.createElement(\"div\", {\n          className: \"card-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"outlined-bare\",\n          margin: \"normal\",\n          variant: \"outlined\",\n          placeholder: \"Username\",\n          value: _this2.state.username,\n          onChange: function onChange(ev) {\n            return _this2.setState({\n              username: ev.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          id: \"outlined-bare\",\n          margin: \"normal\",\n          variant: \"outlined\",\n          placeholder: \"Message\",\n          value: _this2.state.message,\n          onChange: function onChange(ev) {\n            return _this2.setState({\n              message: ev.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: _this2.sendMessage,\n          variant: \"outlined\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Send\"))))));\n      })));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/Juico/Desktop/RPT07/Thesis/community-chat/src/components/Chat.js"],"names":["React","io","Paper","Button","TextField","ExpansionPanel","ExpansionPanelSummary","Typography","ExpansionPanelDetails","axios","Chat","props","state","clients","id","username","message","messages","socket","on","data","removeClient","addMessage","addId","addAllClients","console","log","setState","i","length","splice","forceUpdate","sendMessage","ev","preventDefault","emit","author","map","client","e","target","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport io from \"socket.io-client\"\nimport {Paper, Button, TextField, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails} from '@material-ui/core'\nimport axios from 'axios'\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMoreIcon';\n\nimport './Chat.css'\n\nclass Chat extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            clients: [],\n            id:'',\n            username: 'Lukas',\n            message: '',\n            messages: []\n        };\n\n        this.socket = io('localhost:8080');\n\n        this.socket.on('disconnected', function(data) {\n            removeClient(data)\n        })\n\n        this.socket.on('RECEIVE_MESSAGE', function(data){\n            addMessage(data);\n        });\n\n        this.socket.on('client', function(data) {\n            addId(data);\n        })\n\n        this.socket.on('allClients', function(data) {\n            addAllClients(data)\n        })\n\n\n        const addMessage = data => {\n            console.log(data);\n            this.setState({messages: [...this.state.messages, data]});\n            console.log(this.state.messages);\n        };\n\n        const addId = data => {\n            this.setState({id: data})\n        }\n\n        const removeClient = data => {\n            // this.state.clients.map((client,i) => {\n            //     if(client === data) {\n            //         this.state.clients.splice(i, client)\n            //     };\n            // })\n            for (var i = 0; i < this.state.clients.length; i++) {\n                if (this.state.clients[i] === data) {\n                    this.state.clients.splice(i, this.state.clients[i])\n                }\n            }\n            console.log(this.state.clients)\n            this.setState({ state: this.state });\n            this.forceUpdate();\n        }\n\n        const addAllClients = data => {\n            this.setState({clients: data}, function() {\n                console.log('Clients from state ', this.state.clients)\n            });\n        }\n\n        this.sendMessage = ev => {\n            ev.preventDefault();\n            this.socket.emit('SEND_MESSAGE', {\n                author: this.state.id,\n                message: this.state.message\n            })\n            this.setState({message: ''});\n        }\n    }\n    \n    render() {\n        return (      \n            <div>\n            <Paper>\n                {this.state.clients.map((client, i) => (       \n                    <div key={i} className='chat-container' onClick={(e)=> {console.log(e.target)}}>\n                    <ExpansionPanel>\n                        <ExpansionPanelSummary>\n                        <Typography>{client}</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Typography>\n                                <div className=\"messages\">\n                                    {this.state.messages.map(message => {\n                                        return (\n                                            <div>{message.author}: {message.message}</div>\n                                        )\n                                    })}\n                                </div>\n                                <div className=\"card-footer\">\n                                    <TextField \n                                        id=\"outlined-bare\" \n                                        margin=\"normal\" \n                                        variant=\"outlined\" \n                                        placeholder=\"Username\" \n                                        value={this.state.username} \n                                        onChange={ev => this.setState({username: ev.target.value})} />\n                                    <TextField \n                                        id=\"outlined-bare\" \n                                        margin=\"normal\" \n                                        variant=\"outlined\" \n                                        placeholder=\"Message\" \n                                        value={this.state.message} \n                                        onChange={ev => this.setState({message: ev.target.value})}/>\n                                    <br/>\n                                <Button onClick={this.sendMessage} variant=\"outlined\" color=\"primary\">Send</Button>\n                                </div>\n                        </Typography>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                  </div>\n                ))}\n            </Paper>\n            </div>\n        );\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}